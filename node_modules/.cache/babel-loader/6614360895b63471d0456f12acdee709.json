{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ClientState = void 0;\n/**\n * All possible states of a Speechly API client. Failed, NoBrowserSupport and NoAudioConsent states are non-recoverable\n * erroneous states, which should be handled by the end user, according to the semantics of an application.\n * Other states can also be utilized for e.g. enabling and disabling recording buttons or showing the status in the app.\n * It is also possible to use arithmetics for state comparison, e.g. `if (state < speechly.ClientState.Disconnected)`,\n * to react to non-recoverable states.\n * @public\n */\n\nvar ClientState;\n\n(function (ClientState) {\n  ClientState[ClientState[\"Failed\"] = 0] = \"Failed\";\n  ClientState[ClientState[\"NoBrowserSupport\"] = 1] = \"NoBrowserSupport\";\n  ClientState[ClientState[\"NoAudioConsent\"] = 2] = \"NoAudioConsent\";\n  ClientState[ClientState[\"Disconnected\"] = 3] = \"Disconnected\";\n  ClientState[ClientState[\"Disconnecting\"] = 4] = \"Disconnecting\";\n  ClientState[ClientState[\"Connecting\"] = 5] = \"Connecting\";\n  ClientState[ClientState[\"Connected\"] = 6] = \"Connected\";\n  ClientState[ClientState[\"Starting\"] = 7] = \"Starting\";\n  ClientState[ClientState[\"Stopping\"] = 8] = \"Stopping\";\n  ClientState[ClientState[\"Recording\"] = 9] = \"Recording\";\n})(ClientState = exports.ClientState || (exports.ClientState = {}));","map":null,"metadata":{},"sourceType":"script"}