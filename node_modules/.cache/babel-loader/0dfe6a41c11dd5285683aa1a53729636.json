{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HintCallout = void 0;\n\nvar react_client_1 = require(\"@speechly/react-client\");\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar types_1 = require(\"../types\");\n\nvar Callout_1 = require(\"./Callout\");\n\nvar HintCallout = function HintCallout(props) {\n  var _a = react_1.useState(false),\n      visible = _a[0],\n      setVisible = _a[1];\n\n  var timeout = react_1.useRef(null);\n  var SHORT_PRESS_TRESHOLD_MS = 600;\n  var INSTRUCTION_PREROLL_MS = 500;\n  var INSTRUCTION_SHOW_TIME_MS = 3000;\n  react_1.useEffect(function () {\n    var subTangentPress = PubSub.subscribe(types_1.SpeechlyUiEvents.TangentPress, function (message, payload) {\n      // console.log('TangentPress', payload.state)\n      hideHints();\n    });\n    var subTangentClick = PubSub.subscribe(types_1.SpeechlyUiEvents.TangentRelease, function (message, payload) {\n      // console.log('TangentRelease ', payload.state, payload.timeMs)\n      // Detect short record button presses\n      if (payload.timeMs < SHORT_PRESS_TRESHOLD_MS) {\n        switch (payload.state) {\n          case react_client_1.SpeechState.Ready:\n          case react_client_1.SpeechState.Recording:\n          case react_client_1.SpeechState.Loading:\n            if (timeout.current === null) {\n              timeout.current = window.setTimeout(function () {\n                setVisible(true);\n                timeout.current = window.setTimeout(function () {\n                  setVisible(false);\n                  timeout.current = null;\n                }, INSTRUCTION_SHOW_TIME_MS);\n              }, INSTRUCTION_PREROLL_MS);\n            }\n\n        }\n      }\n    });\n    return function () {\n      PubSub.unsubscribe(subTangentPress);\n      PubSub.unsubscribe(subTangentClick);\n    };\n  }, []);\n\n  var hideHints = function hideHints() {\n    setVisible(false);\n\n    if (timeout.current !== null) {\n      clearTimeout(timeout.current);\n      timeout.current = null;\n    }\n  };\n\n  return react_1.default.createElement(Callout_1.Callout, {\n    sourceAnchors: {\n      x: '50%',\n      y: '6%'\n    },\n    visible: visible,\n    onClick: function onClick() {\n      return hideHints();\n    }\n  }, \"Hold to talk\");\n};\n\nexports.HintCallout = HintCallout;","map":null,"metadata":{},"sourceType":"script"}