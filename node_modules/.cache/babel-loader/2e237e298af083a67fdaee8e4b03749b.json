{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Calendar = void 0;\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar DAY = 24 * 3600 * 1000;\n\nvar buildCalendar = function buildCalendar(firstDate) {\n  var dates = [];\n\n  for (var i = 0 - firstDate.getDay(); i < 29 || dates.length % 7 != 1; i++) {\n    dates.push(new Date(firstDate.getTime() + i * DAY));\n  }\n\n  return dates;\n};\n\nvar groupByWeek = function groupByWeek(acc, date) {\n  var row = acc.length;\n\n  if (row === 0) {\n    // init\n    acc[row] = [];\n    acc[row].push(date);\n    return acc;\n  }\n\n  if (acc[row - 1].length === 7) {\n    row++;\n  }\n\n  if (acc[row - 1] === undefined) {\n    acc[row - 1] = [];\n  }\n\n  acc[row - 1].push(date);\n  return acc;\n};\n\nvar Calendar = function Calendar(_a) {\n  var date = _a.date,\n      onDatePick = _a.onDatePick;\n\n  var _b = react_1.useState(date !== null && date !== void 0 ? date : new Date()),\n      _date = _b[0],\n      setDate = _b[1];\n\n  var firstDate = new Date(Date.parse((_date.getMonth() + 1).toString().padStart(2, '0') + \"-01-\" + _date.getFullYear()));\n  var dates = buildCalendar(firstDate);\n  var weekDays = ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'];\n  var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n  var prevMonth = function prevMonth(e) {\n    e.preventDefault();\n\n    var year = _date.getFullYear();\n\n    var month = _date.getMonth();\n\n    if (_date.getMonth() === 0) {\n      year--;\n      month = 11;\n    } else {\n      month--;\n    }\n\n    var prevMonth = new Date(Date.parse((month + 1).toString().padStart(2, '0') + \"-01-\" + year));\n    setDate(prevMonth);\n  };\n\n  var nextMonth = function nextMonth(e) {\n    e.preventDefault();\n\n    var year = _date.getFullYear();\n\n    var month = _date.getMonth();\n\n    if (_date.getMonth() === 11) {\n      year++;\n      month = 0;\n    } else {\n      month++;\n    }\n\n    var nextMonth = new Date(Date.parse((month + 1).toString().padStart(2, '0') + \"-01-\" + year));\n    setDate(nextMonth);\n  };\n\n  var pick = function pick(pickedDate) {\n    if (onDatePick) {\n      onDatePick(pickedDate);\n    }\n  };\n\n  return react_1.default.createElement(\"div\", {\n    className: \"calendar\"\n  }, react_1.default.createElement(\"div\", {\n    className: \"row\"\n  }, react_1.default.createElement(\"div\", {\n    className: \"span12\"\n  }, react_1.default.createElement(\"table\", {\n    className: \"table-condensed table-bordered table-striped\"\n  }, react_1.default.createElement(\"thead\", null, react_1.default.createElement(\"tr\", {\n    className: \"header\"\n  }, react_1.default.createElement(\"th\", null, react_1.default.createElement(\"button\", {\n    className: \"prev-button\",\n    onClick: prevMonth\n  }, \"<\")), react_1.default.createElement(\"th\", {\n    colSpan: 5\n  }, react_1.default.createElement(\"div\", null, _date && months[_date.getMonth()] + ' ' + _date.getFullYear())), react_1.default.createElement(\"th\", null, react_1.default.createElement(\"button\", {\n    className: \"next-bottin\",\n    onClick: nextMonth\n  }, \">\"))), react_1.default.createElement(\"tr\", null, weekDays.map(function (d) {\n    return react_1.default.createElement(\"th\", {\n      key: d\n    }, d);\n  }))), react_1.default.createElement(\"tbody\", null, dates && dates.reduce(groupByWeek, []).map(function (datesInWeek, i) {\n    return react_1.default.createElement(\"tr\", {\n      key: i\n    }, datesInWeek.map(function (d) {\n      return react_1.default.createElement(\"td\", {\n        key: d.getTime(),\n        className: date && _date.getMonth() !== d.getMonth() ? 'muted' : date && _date.getDate() === d.getDate() ? 'selected' : '',\n        onClick: function onClick() {\n          return pick(d);\n        }\n      }, d.getDate());\n    }));\n  }))))));\n};\n\nexports.Calendar = Calendar;","map":null,"metadata":{},"sourceType":"script"}