{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\RajaJ\\\\OneDrive\\\\Desktop\\\\react-component-landing-page\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\RajaJ\\\\OneDrive\\\\Desktop\\\\react-component-landing-page\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\RajaJ\\\\OneDrive\\\\Desktop\\\\react-component-landing-page\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\RajaJ\\\\OneDrive\\\\desktop\\\\react-component-landing-page\\\\src\\\\components\\\\Chats.js\";\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { ChatEngine } from 'react-chat-engine';\nimport { auth } from './firebase.js';\nimport { CustomerServiceFilled } from '@ant-design/icons';\nimport { PushToTalkButton, PushToTalkButtonContainer, ErrorPanel } from '@speechly/react-ui';\nimport { useSpeechContext } from '@speechly/react-client';\nimport '../index.css';\nimport { useAuth } from '../contexts/AuthContext';\nimport axios from 'axios';\nimport { ApiFilled } from '@ant-design/icons';\n\nvar Chats = function Chats() {\n  var history = useHistory();\n\n  var _useAuth = useAuth(),\n      user = _useAuth.user;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useSpeechContext = useSpeechContext(),\n      segment = _useSpeechContext.segment;\n\n  var _useSpeechContext2 = useSpeechContext(),\n      speechState = _useSpeechContext2.speechState;\n\n  console.log(user);\n\n  var handleLogout = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return auth.signOut();\n\n            case 2:\n              history.push(\"/\");\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleLogout() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getFile = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(url) {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch(url);\n\n            case 2:\n              response = _context2.sent;\n              _context2.next = 5;\n              return response.blob();\n\n            case 5:\n              data = _context2.sent;\n              return _context2.abrupt(\"return\", new File([data], \"userPhoto.jpeg\", {\n                type: 'image/jpeg'\n              }));\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getFile(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (!user) {\n      history.push('/');\n      return;\n    }\n\n    axios.get('https://api.chatengine.io/users/me', {\n      headers: {\n        \"project-id\": \"d58f74d7-18d6-4a78-9976-bc868fd479ac\",\n        \"user-name\": user.email,\n        \"user-secret\": user.uid\n      }\n    }).then(function () {\n      setLoading(false);\n    }).catch(function () {\n      var formdata = new FormData();\n      formdata.append('email', user.email);\n      formdata.append('username', user.email);\n      formdata.append('secret', user.uid);\n      getFile(user.photoURL).then(function (avatar) {\n        formdata.append('avatar', avatar, avatar.name);\n        axios.post('https://api.chatengine.io/users/', formdata, {\n          headers: {\n            \"private-key\": \" 965081d9-9211-4b81-b447-41d888f4b38c\"\n          }\n        }).then(function () {\n          return setLoading(false);\n        }).catch(function (error) {\n          return console.log(error);\n        });\n      });\n    });\n  }, [user, history]);\n  if (!user || loading) return 'Loading...';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chats-page\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-bar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo-tab\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"MedNet.\"), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: handleLogout,\n    className: \"logout-tab\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Logout\")), /*#__PURE__*/React.createElement(ChatEngine, {\n    hideUI: true,\n    height: \"calc(100vh - 66px)\",\n    projectID: \"d58f74d7-18d6-4a78-9976-bc868fd479ac\",\n    userName: user.email,\n    userSecret: user.uid,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PushToTalkButtonContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PushToTalkButton, {\n    appid: process.env.REACT_SPEECHLY_APP_ID,\n    placement: \"top\",\n    hide: \"false\",\n    capturekey: \" \",\n    intro: \"Push to talk\",\n    size: \"45px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ErrorPanel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-bar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"pop-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"state\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, speechState), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"script\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }), segment ? /*#__PURE__*/React.createElement(React.Fragment, null, segment.words.map(function (w) {\n    return w.value;\n  }).join(\" \")) : null))));\n};\n\nexport default Chats;","map":{"version":3,"sources":["C:/Users/RajaJ/OneDrive/desktop/react-component-landing-page/src/components/Chats.js"],"names":["React","useRef","useState","useEffect","useHistory","ChatEngine","auth","CustomerServiceFilled","PushToTalkButton","PushToTalkButtonContainer","ErrorPanel","useSpeechContext","useAuth","axios","ApiFilled","Chats","history","user","loading","setLoading","segment","speechState","console","log","handleLogout","signOut","push","getFile","url","fetch","response","blob","data","File","type","get","headers","email","uid","then","catch","formdata","FormData","append","photoURL","avatar","name","post","error","process","env","REACT_SPEECHLY_APP_ID","words","map","w","value","join"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect }from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ChatEngine } from 'react-chat-engine';\r\nimport { auth } from './firebase.js';\r\nimport { CustomerServiceFilled } from '@ant-design/icons' ;\r\nimport { PushToTalkButton, PushToTalkButtonContainer,  ErrorPanel } from '@speechly/react-ui';\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport '../index.css';\r\n\r\n\r\n\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport axios from 'axios';\r\nimport { ApiFilled } from '@ant-design/icons';\r\n\r\nconst Chats = () => {\r\n\r\n  const history = useHistory();\r\n  const { user } = useAuth();\r\n  const [loading, setLoading ] = useState(true);\r\n  const { segment } = useSpeechContext();\r\n  const { speechState} = useSpeechContext()\r\n\r\n  console.log(user);\r\n\r\n  const handleLogout = async () => {\r\n    await auth.signOut();\r\n\r\n    history.push(\"/\");\r\n  }\r\n\r\n  const getFile = async (url) => {\r\n      const response = await fetch(url);\r\n      const data = await response.blob();\r\n\r\n      return new File([data],\"userPhoto.jpeg\",{ type : 'image/jpeg' })\r\n\r\n  }\r\n\r\n\r\n  useEffect(()=> {\r\n      if(!user){\r\n        history.push('/');\r\n        return;\r\n      }\r\n\r\n      axios.get('https://api.chatengine.io/users/me',{\r\n          headers:{\r\n            \"project-id\" : \"d58f74d7-18d6-4a78-9976-bc868fd479ac\",\r\n            \"user-name\" : user.email,\r\n            \"user-secret\" : user.uid,\r\n          }\r\n\r\n      })\r\n\r\n      .then(() => {\r\n          setLoading(false);\r\n      })\r\n\r\n      .catch(() => {\r\n          let formdata = new FormData();\r\n          formdata.append('email', user.email);\r\n          formdata.append('username', user.email);\r\n          formdata.append('secret', user.uid);\r\n\r\n          getFile(user.photoURL)\r\n            .then((avatar) => {\r\n                formdata.append('avatar', avatar, avatar.name);\r\n\r\n                axios.post('https://api.chatengine.io/users/',\r\n                formdata,\r\n                { headers: { \"private-key\" :\" 965081d9-9211-4b81-b447-41d888f4b38c\" }}\r\n                )\r\n                .then(() => setLoading(false))\r\n                .catch((error) => console.log(error))\r\n\r\n              })\r\n      })\r\n  }, [user, history]);\r\n\r\n  if(!user || loading) return 'Loading...' ;\r\n\r\n\r\n  return (\r\n    <div className=\"chats-page\">\r\n        <div className=\"nav-bar\">\r\n            <div className=\"logo-tab\">\r\n                MedNet.\r\n\r\n            </div>\r\n            <div\r\n            onClick ={handleLogout}\r\n            className=\"logout-tab\">\r\n                Logout\r\n\r\n            </div>\r\n          </div>\r\n\r\n        <ChatEngine\r\n            hideUI ={true}\r\n            height=\"calc(100vh - 66px)\"\r\n            projectID =\"d58f74d7-18d6-4a78-9976-bc868fd479ac\"\r\n            userName={user.email}\r\n            userSecret={user.uid}\r\n            />\r\n\r\n    <div>\r\n          <PushToTalkButtonContainer>\r\n          <PushToTalkButton\r\n            appid={process.env.REACT_SPEECHLY_APP_ID}\r\n            placement=\"top\"\r\n            hide=\"false\"\r\n            capturekey=\" \"\r\n            intro=\"Push to talk\"\r\n            size=\"45px\"\r\n           >\r\n                <ErrorPanel />\r\n                </PushToTalkButton>\r\n          </PushToTalkButtonContainer>\r\n\r\n    </div>\r\n    <div className=\"nav-bar\">\r\n\r\n    <div class=\"wrapper\">\r\n          <div class=\"pop-text\" >\r\n          <div class=\"state\">\r\n          {speechState}\r\n          </div>\r\n          <br />\r\n    <br />\r\n          <script>\r\n\r\n          </script>\r\n\r\n\r\n\r\n\r\n            {segment ? (\r\n              <>\r\n              {segment.words.map((w) => w.value).join(\" \")}\r\n\r\n              </>\r\n            ) :null}\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n      </div>\r\n\r\n            </div>\r\n            \r\n\r\n\r\n  );\r\n}\r\n\r\nexport default Chats;\r\n"]},"metadata":{},"sourceType":"module"}