{"ast":null,"code":"var forOwn = require('./forOwn');\n\nvar isArray = require('../lang/isArray');\n\nfunction containsMatch(array, pattern) {\n  var i = -1,\n      length = array.length;\n\n  while (++i < length) {\n    if (deepMatches(array[i], pattern)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction matchArray(target, pattern) {\n  var i = -1,\n      patternLength = pattern.length;\n\n  while (++i < patternLength) {\n    if (!containsMatch(target, pattern[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction matchObject(target, pattern) {\n  var result = true;\n  forOwn(pattern, function (val, key) {\n    if (!deepMatches(target[key], val)) {\n      // Return false to break out of forOwn early\n      return result = false;\n    }\n  });\n  return result;\n}\n/**\n * Recursively check if the objects match.\n */\n\n\nfunction deepMatches(target, pattern) {\n  if (target && typeof target === 'object') {\n    if (isArray(target) && isArray(pattern)) {\n      return matchArray(target, pattern);\n    } else {\n      return matchObject(target, pattern);\n    }\n  } else {\n    return target === pattern;\n  }\n}\n\nmodule.exports = deepMatches;","map":null,"metadata":{},"sourceType":"script"}