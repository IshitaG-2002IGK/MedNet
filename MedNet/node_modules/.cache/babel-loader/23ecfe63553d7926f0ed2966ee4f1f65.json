{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VoiceDatePicker = void 0;\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar react_client_1 = require(\"@speechly/react-client\");\n\nvar Calendar_1 = require(\"./Calendar\");\n\nvar CalendarIcon_1 = require(\"./CalendarIcon\");\n\nvar utils_1 = require(\"../utils\");\n\nvar VoiceDatePicker = function (_a) {\n  var label = _a.label,\n      value = _a.value,\n      defaultValue = _a.defaultValue,\n      changeOnIntent = _a.changeOnIntent,\n      changeOnEntityType = _a.changeOnEntityType,\n      onChange = _a.onChange,\n      onFinal = _a.onFinal,\n      onBlur = _a.onBlur,\n      onFocus = _a.onFocus,\n      _b = _a.focused,\n      focused = _b === void 0 ? true : _b;\n  var inputEl = react_1.useRef(null);\n\n  var _c = react_1.useState(false),\n      _showCalendar = _c[0],\n      _setShowCalendar = _c[1];\n\n  var _d = react_1.useState(focused),\n      _focused = _d[0],\n      _setFocused = _d[1];\n\n  var _e = react_1.useState(defaultValue),\n      _date = _e[0],\n      _setDate = _e[1];\n\n  var _f = react_1.useState(defaultValue ? dateToString(defaultValue) : ''),\n      _value = _f[0],\n      _setValue = _f[1];\n\n  var _g = react_1.useState(defaultValue ? dateToString(defaultValue) : ''),\n      _lastGoodKnownValue = _g[0],\n      _setLastGoodKnownValue = _g[1];\n\n  var _h = react_1.useState(undefined),\n      lastSegmentId = _h[0],\n      setLastSegmentId = _h[1];\n\n  var segment = react_client_1.useSpeechContext().segment;\n\n  var _onChange = function (newValue) {\n    _setValue(newValue);\n\n    var newDate = stringToDate(newValue);\n\n    if (newDate) {\n      _setDate(newDate);\n\n      if (onChange) {\n        onChange(newDate);\n      }\n    }\n  };\n\n  function dateToString(date) {\n    return date.getDate().toString().padStart(2, '0') + \"/\" + (date.getMonth() + 1).toString().padStart(2, '0') + \"/\" + date.getFullYear();\n  }\n\n  function stringToDate(value) {\n    var regex = /([\\d]+)\\D([\\d]+)\\D(\\d\\d\\d\\d)/;\n    var matches = value.match(regex);\n    if (!matches) return null;\n    var all = matches[0],\n        day = matches[1],\n        month = matches[2],\n        year = matches[3];\n    return new Date(month + \" \" + day + \" \" + year);\n  }\n\n  var _onFocus = function () {\n    _setFocused(true); // use callback only to change parent state\n\n\n    if (!focused && onFocus) {\n      onFocus();\n    }\n  };\n\n  var _onBlur = function () {\n    // use callback only to change parent state\n    if (_focused) {\n      _setFocused(false);\n\n      if (onBlur) {\n        onBlur();\n      }\n    }\n  };\n\n  react_1.useEffect(function () {\n    if (value) {\n      _setValue(dateToString(value));\n\n      _setDate(value);\n    }\n  }, [value]);\n  react_1.useEffect(function () {\n    if (focused && !_focused && inputEl != null && inputEl.current != null) {\n      inputEl.current.focus();\n    }\n  }, [focused]);\n  react_1.useEffect(function () {\n    if (segment) {\n      var newValue = null;\n      var lastGoodKnownValue = _lastGoodKnownValue; // Update last good known value at new segment start\n\n      var segmentId = segment.contextId + \"/\" + segment.id;\n\n      if (segmentId !== lastSegmentId) {\n        setLastSegmentId(segmentId);\n        lastGoodKnownValue = value ? dateToString(value) : _value;\n\n        _setLastGoodKnownValue(lastGoodKnownValue);\n      } // Define newValue if the segment contains input targeted to this component\n\n\n      if (!changeOnIntent || segment.intent.intent === changeOnIntent) {\n        var entities = utils_1.formatEntities(segment.entities);\n\n        if (entities[changeOnEntityType] !== undefined) {\n          newValue = dateToString(new Date(Date.parse(entities[changeOnEntityType])));\n        }\n      } // _onChange to newValue only only if defined: tentative input may retarget to another component at any time\n      // otherwise reset to last good known value\n\n\n      _onChange(newValue !== null ? newValue : lastGoodKnownValue);\n\n      if (segment === null || segment === void 0 ? void 0 : segment.isFinal) {\n        if (inputEl != null && inputEl.current != null) {\n          inputEl.current.blur();\n        }\n\n        if (onFinal) {\n          onFinal();\n        }\n      }\n    }\n  }, [segment]);\n\n  var toggleCalendar = function (e) {\n    e.preventDefault();\n\n    _setShowCalendar(!_showCalendar);\n  };\n\n  var onDatePick = function (pickedDate) {\n    _setShowCalendar(!_showCalendar);\n\n    _onChange(dateToString(pickedDate));\n  };\n\n  return react_1.default.createElement(\"div\", {\n    className: \"widgetGroup inputText withCalendar\"\n  }, react_1.default.createElement(\"label\", null, label), react_1.default.createElement(\"input\", {\n    ref: inputEl,\n    type: \"text\",\n    name: changeOnEntityType,\n    value: _value,\n    onChange: function (event) {\n      _onChange(event.target.value);\n    },\n    onBlur: _onBlur,\n    onFocus: _onFocus\n  }), react_1.default.createElement(\"button\", {\n    className: \"calendar-button\",\n    onClick: toggleCalendar\n  }, react_1.default.createElement(CalendarIcon_1.CalendarIcon, null)), _showCalendar && react_1.default.createElement(Calendar_1.Calendar, {\n    date: _date,\n    onDatePick: onDatePick\n  }));\n};\n\nexports.VoiceDatePicker = VoiceDatePicker;","map":{"version":3,"sources":["../../src/components/VoiceDatePicker.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,OAAA,GAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AA0EO,IAAM,eAAe,GAAG,UAAC,EAAD,EAA6I;MAA1I,KAAK,GAAA,EAAA,CAAA,K;MAAE,KAAK,GAAA,EAAA,CAAA,K;MAAE,YAAY,GAAA,EAAA,CAAA,Y;MAAE,cAAc,GAAA,EAAA,CAAA,c;MAAE,kBAAkB,GAAA,EAAA,CAAA,kB;MAAE,QAAQ,GAAA,EAAA,CAAA,Q;MAAE,OAAO,GAAA,EAAA,CAAA,O;MAAE,MAAM,GAAA,EAAA,CAAA,M;MAAE,OAAO,GAAA,EAAA,CAAA,O;MAAE,EAAA,GAAA,EAAA,CAAA,O;MAAA,OAAO,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO,E;AAElJ,MAAM,OAAO,GAAsC,OAAA,CAAA,MAAA,CAAO,IAAP,CAAnD;;AAEM,MAAA,EAAA,GAAsC,OAAA,CAAA,QAAA,CAAS,KAAT,CAAtC;AAAA,MAAE,aAAa,GAAA,EAAA,CAAA,CAAA,CAAf;AAAA,MAAiB,gBAAgB,GAAA,EAAA,CAAA,CAAA,CAAjC;;AACA,MAAA,EAAA,GAA4B,OAAA,CAAA,QAAA,CAAS,OAAT,CAA5B;AAAA,MAAE,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAV;AAAA,MAAY,WAAW,GAAA,EAAA,CAAA,CAAA,CAAvB;;AACA,MAAA,EAAA,GAAsB,OAAA,CAAA,QAAA,CAAS,YAAT,CAAtB;AAAA,MAAE,KAAK,GAAA,EAAA,CAAA,CAAA,CAAP;AAAA,MAAS,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAjB;;AACA,MAAA,EAAA,GAAwB,OAAA,CAAA,QAAA,CAAS,YAAY,GAAG,YAAY,CAAC,YAAD,CAAf,GAAgC,EAArD,CAAxB;AAAA,MAAE,MAAM,GAAA,EAAA,CAAA,CAAA,CAAR;AAAA,MAAU,SAAS,GAAA,EAAA,CAAA,CAAA,CAAnB;;AACA,MAAA,EAAA,GAAkD,OAAA,CAAA,QAAA,CAAS,YAAY,GAAG,YAAY,CAAC,YAAD,CAAf,GAAgC,EAArD,CAAlD;AAAA,MAAE,mBAAmB,GAAA,EAAA,CAAA,CAAA,CAArB;AAAA,MAAuB,sBAAsB,GAAA,EAAA,CAAA,CAAA,CAA7C;;AACA,MAAA,EAAA,GAAsC,OAAA,CAAA,QAAA,CAA6B,SAA7B,CAAtC;AAAA,MAAE,aAAa,GAAA,EAAA,CAAA,CAAA,CAAf;AAAA,MAAiB,gBAAgB,GAAA,EAAA,CAAA,CAAA,CAAjC;;AACE,MAAA,OAAO,GAAK,cAAA,CAAA,gBAAA,GAAL,OAAP;;AAER,MAAM,SAAS,GAAG,UAAC,QAAD,EAAiB;AACjC,IAAA,SAAS,CAAC,QAAD,CAAT;;AAEA,QAAM,OAAO,GAAG,YAAY,CAAC,QAAD,CAA5B;;AACA,QAAI,OAAJ,EAAa;AACX,MAAA,QAAQ,CAAC,OAAD,CAAR;;AACA,UAAI,QAAJ,EAAc;AACZ,QAAA,QAAQ,CAAC,OAAD,CAAR;AACD;AACF;AACF,GAVD;;AAYA,WAAS,YAAT,CAAsB,IAAtB,EAAgC;AAC9B,WAAW,IAAI,CAAC,OAAL,EAAD,CAAiB,QAAjB,GAA4B,QAA5B,CAAqC,CAArC,EAAwC,GAAxC,IAA4C,GAA5C,GAAgD,CAAC,IAAI,CAAC,QAAL,KAAkB,CAAnB,EAAsB,QAAtB,GAAiC,QAAjC,CAA0C,CAA1C,EAA6C,GAA7C,CAAhD,GAAiG,GAAjG,GAAqG,IAAI,CAAC,WAAL,EAA/G;AACD;;AAED,WAAS,YAAT,CAAsB,KAAtB,EAAmC;AACjC,QAAM,KAAK,GAAG,8BAAd;AACA,QAAM,OAAO,GAAG,KAAK,CAAC,KAAN,CAAY,KAAZ,CAAhB;AACA,QAAI,CAAC,OAAL,EAAc,OAAO,IAAP;AACP,QAAA,GAAG,GAAsB,OAAO,CAA7B,CAA6B,CAAhC;AAAA,QAAK,GAAG,GAAiB,OAAO,CAAxB,CAAwB,CAAhC;AAAA,QAAU,KAAK,GAAU,OAAO,CAAjB,CAAiB,CAAhC;AAAA,QAAiB,IAAI,GAAI,OAAO,CAAX,CAAW,CAAhC;AACP,WAAO,IAAI,IAAJ,CAAY,KAAK,GAAA,GAAL,GAAS,GAAT,GAAY,GAAZ,GAAgB,IAA5B,CAAP;AACD;;AAED,MAAM,QAAQ,GAAG,YAAA;AACf,IAAA,WAAW,CAAC,IAAD,CAAX,CADe,CAEf;;;AACA,QAAI,CAAC,OAAD,IAAY,OAAhB,EAAyB;AACvB,MAAA,OAAO;AACR;AACF,GAND;;AAQA,MAAM,OAAO,GAAG,YAAA;AACd;AACA,QAAI,QAAJ,EAAc;AACZ,MAAA,WAAW,CAAC,KAAD,CAAX;;AACA,UAAI,MAAJ,EAAY;AACV,QAAA,MAAM;AACP;AACF;AACF,GARD;;AAUA,EAAA,OAAA,CAAA,SAAA,CAAU,YAAA;AACR,QAAI,KAAJ,EAAW;AACT,MAAA,SAAS,CAAC,YAAY,CAAC,KAAD,CAAb,CAAT;;AACA,MAAA,QAAQ,CAAC,KAAD,CAAR;AACD;AACF,GALD,EAKG,CAAC,KAAD,CALH;AAOA,EAAA,OAAA,CAAA,SAAA,CAAU,YAAA;AACR,QAAI,OAAO,IAAI,CAAC,QAAZ,IAAwB,OAAO,IAAI,IAAnC,IAA2C,OAAO,CAAC,OAAR,IAAmB,IAAlE,EAAwE;AACtE,MAAA,OAAO,CAAC,OAAR,CAAgB,KAAhB;AACD;AACF,GAJD,EAIG,CAAC,OAAD,CAJH;AAMA,EAAA,OAAA,CAAA,SAAA,CAAU,YAAA;AACR,QAAI,OAAJ,EAAa;AACX,UAAI,QAAQ,GAAG,IAAf;AACA,UAAI,kBAAkB,GAAG,mBAAzB,CAFW,CAIX;;AACA,UAAM,SAAS,GAAM,OAAO,CAAC,SAAR,GAAiB,GAAjB,GAAqB,OAAO,CAAC,EAAlD;;AACA,UAAI,SAAS,KAAK,aAAlB,EAAiC;AAC/B,QAAA,gBAAgB,CAAC,SAAD,CAAhB;AACA,QAAA,kBAAkB,GAAG,KAAK,GAAG,YAAY,CAAC,KAAD,CAAf,GAAyB,MAAnD;;AACA,QAAA,sBAAsB,CAAC,kBAAD,CAAtB;AACD,OAVU,CAYX;;;AACA,UAAI,CAAC,cAAD,IAAmB,OAAO,CAAC,MAAR,CAAe,MAAf,KAA0B,cAAjD,EAAiE;AAC/D,YAAI,QAAQ,GAAG,OAAA,CAAA,cAAA,CAAe,OAAO,CAAC,QAAvB,CAAf;;AACA,YAAI,QAAQ,CAAC,kBAAD,CAAR,KAAiC,SAArC,EAAgD;AAC9C,UAAA,QAAQ,GAAG,YAAY,CAAC,IAAI,IAAJ,CAAS,IAAI,CAAC,KAAL,CAAW,QAAQ,CAAC,kBAAD,CAAnB,CAAT,CAAD,CAAvB;AACD;AACF,OAlBU,CAoBX;AACA;;;AACA,MAAA,SAAS,CAAC,QAAQ,KAAK,IAAb,GAAoB,QAApB,GAA+B,kBAAhC,CAAT;;AAEA,UAAI,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAA,OAAO,CAAE,OAAb,EAAsB;AACpB,YAAI,OAAO,IAAI,IAAX,IAAmB,OAAO,CAAC,OAAR,IAAmB,IAA1C,EAAgD;AAC9C,UAAA,OAAO,CAAC,OAAR,CAAgB,IAAhB;AACD;;AACD,YAAI,OAAJ,EAAa;AACX,UAAA,OAAO;AACR;AACF;AACF;AACF,GAlCD,EAkCG,CAAC,OAAD,CAlCH;;AAoCA,MAAM,cAAc,GAAG,UAAC,CAAD,EAAmB;AACxC,IAAA,CAAC,CAAC,cAAF;;AACA,IAAA,gBAAgB,CAAC,CAAC,aAAF,CAAhB;AACD,GAHD;;AAKA,MAAM,UAAU,GAAG,UAAC,UAAD,EAAiB;AAClC,IAAA,gBAAgB,CAAC,CAAC,aAAF,CAAhB;;AACA,IAAA,SAAS,CAAC,YAAY,CAAC,UAAD,CAAb,CAAT;AACD,GAHD;;AAKA,SACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,OAAA,EAAA,IAAA,EAAS,KAAT,CADF,EAEE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AACE,IAAA,GAAG,EAAE,OADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAE,kBAHR;AAIE,IAAA,KAAK,EAAE,MAJT;AAKE,IAAA,QAAQ,EAAE,UAAC,KAAD,EAAW;AAAO,MAAA,SAAS,CAAC,KAAK,CAAC,MAAN,CAAa,KAAd,CAAT;AAA+B,KAL7D;AAME,IAAA,MAAM,EAAE,OANV;AAOE,IAAA,OAAO,EAAE;AAPX,GAAA,CAFF,EAYE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,OAAO,EAAE;AAA7C,GAAA,EACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,cAAA,CAAA,YAAD,EAAa,IAAb,CADF,CAZF,EAgBI,aAAa,IAAI,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,UAAA,CAAA,QAAD,EAAS;AAAC,IAAA,IAAI,EAAE,KAAP;AAAc,IAAA,UAAU,EAAE;AAA1B,GAAT,CAhBrB,CADF;AAoBD,CArIM;;AAAM,OAAA,CAAA,eAAA,GAAe,eAAf","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VoiceDatePicker = void 0;\nvar react_1 = __importStar(require(\"react\"));\nvar react_client_1 = require(\"@speechly/react-client\");\nvar Calendar_1 = require(\"./Calendar\");\nvar CalendarIcon_1 = require(\"./CalendarIcon\");\nvar utils_1 = require(\"../utils\");\nvar VoiceDatePicker = function (_a) {\n    var label = _a.label, value = _a.value, defaultValue = _a.defaultValue, changeOnIntent = _a.changeOnIntent, changeOnEntityType = _a.changeOnEntityType, onChange = _a.onChange, onFinal = _a.onFinal, onBlur = _a.onBlur, onFocus = _a.onFocus, _b = _a.focused, focused = _b === void 0 ? true : _b;\n    var inputEl = react_1.useRef(null);\n    var _c = react_1.useState(false), _showCalendar = _c[0], _setShowCalendar = _c[1];\n    var _d = react_1.useState(focused), _focused = _d[0], _setFocused = _d[1];\n    var _e = react_1.useState(defaultValue), _date = _e[0], _setDate = _e[1];\n    var _f = react_1.useState(defaultValue ? dateToString(defaultValue) : ''), _value = _f[0], _setValue = _f[1];\n    var _g = react_1.useState(defaultValue ? dateToString(defaultValue) : ''), _lastGoodKnownValue = _g[0], _setLastGoodKnownValue = _g[1];\n    var _h = react_1.useState(undefined), lastSegmentId = _h[0], setLastSegmentId = _h[1];\n    var segment = react_client_1.useSpeechContext().segment;\n    var _onChange = function (newValue) {\n        _setValue(newValue);\n        var newDate = stringToDate(newValue);\n        if (newDate) {\n            _setDate(newDate);\n            if (onChange) {\n                onChange(newDate);\n            }\n        }\n    };\n    function dateToString(date) {\n        return (date.getDate()).toString().padStart(2, '0') + \"/\" + (date.getMonth() + 1).toString().padStart(2, '0') + \"/\" + date.getFullYear();\n    }\n    function stringToDate(value) {\n        var regex = /([\\d]+)\\D([\\d]+)\\D(\\d\\d\\d\\d)/;\n        var matches = value.match(regex);\n        if (!matches)\n            return null;\n        var all = matches[0], day = matches[1], month = matches[2], year = matches[3];\n        return new Date(month + \" \" + day + \" \" + year);\n    }\n    var _onFocus = function () {\n        _setFocused(true);\n        // use callback only to change parent state\n        if (!focused && onFocus) {\n            onFocus();\n        }\n    };\n    var _onBlur = function () {\n        // use callback only to change parent state\n        if (_focused) {\n            _setFocused(false);\n            if (onBlur) {\n                onBlur();\n            }\n        }\n    };\n    react_1.useEffect(function () {\n        if (value) {\n            _setValue(dateToString(value));\n            _setDate(value);\n        }\n    }, [value]);\n    react_1.useEffect(function () {\n        if (focused && !_focused && inputEl != null && inputEl.current != null) {\n            inputEl.current.focus();\n        }\n    }, [focused]);\n    react_1.useEffect(function () {\n        if (segment) {\n            var newValue = null;\n            var lastGoodKnownValue = _lastGoodKnownValue;\n            // Update last good known value at new segment start\n            var segmentId = segment.contextId + \"/\" + segment.id;\n            if (segmentId !== lastSegmentId) {\n                setLastSegmentId(segmentId);\n                lastGoodKnownValue = value ? dateToString(value) : _value;\n                _setLastGoodKnownValue(lastGoodKnownValue);\n            }\n            // Define newValue if the segment contains input targeted to this component\n            if (!changeOnIntent || segment.intent.intent === changeOnIntent) {\n                var entities = utils_1.formatEntities(segment.entities);\n                if (entities[changeOnEntityType] !== undefined) {\n                    newValue = dateToString(new Date(Date.parse(entities[changeOnEntityType])));\n                }\n            }\n            // _onChange to newValue only only if defined: tentative input may retarget to another component at any time\n            // otherwise reset to last good known value\n            _onChange(newValue !== null ? newValue : lastGoodKnownValue);\n            if (segment === null || segment === void 0 ? void 0 : segment.isFinal) {\n                if (inputEl != null && inputEl.current != null) {\n                    inputEl.current.blur();\n                }\n                if (onFinal) {\n                    onFinal();\n                }\n            }\n        }\n    }, [segment]);\n    var toggleCalendar = function (e) {\n        e.preventDefault();\n        _setShowCalendar(!_showCalendar);\n    };\n    var onDatePick = function (pickedDate) {\n        _setShowCalendar(!_showCalendar);\n        _onChange(dateToString(pickedDate));\n    };\n    return (react_1.default.createElement(\"div\", { className: \"widgetGroup inputText withCalendar\" },\n        react_1.default.createElement(\"label\", null, label),\n        react_1.default.createElement(\"input\", { ref: inputEl, type: \"text\", name: changeOnEntityType, value: _value, onChange: function (event) { _onChange(event.target.value); }, onBlur: _onBlur, onFocus: _onFocus }),\n        react_1.default.createElement(\"button\", { className: \"calendar-button\", onClick: toggleCalendar },\n            react_1.default.createElement(CalendarIcon_1.CalendarIcon, null)),\n        _showCalendar && react_1.default.createElement(Calendar_1.Calendar, { date: _date, onDatePick: onDatePick })));\n};\nexports.VoiceDatePicker = VoiceDatePicker;\n//# sourceMappingURL=VoiceDatePicker.js.map"]},"metadata":{},"sourceType":"script"}